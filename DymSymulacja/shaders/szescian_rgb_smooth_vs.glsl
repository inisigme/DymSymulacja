//////////////////////////////////////////////////////////////////////
// (c) Janusz Ganczarski
// http://www.januszg.hg.pl
// JanuszG@enter.net.pl
//////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////
// GLSL 3.30
//////////////////////////////////////////////////////////////////////
#version 330

//////////////////////////////////////////////////////////////////////
// iloczyn macierzy modelu-widoku i macierzy rzutowania
//////////////////////////////////////////////////////////////////////
uniform mat4 modelViewProjectionMatrix;

//////////////////////////////////////////////////////////////////////
// numery indeksów poszczególnych atrybutów wierzcho³ków
//////////////////////////////////////////////////////////////////////
#define POSITION 0
#define COLOR 1

//////////////////////////////////////////////////////////////////////
// wspó³rzêdne wierzcho³ka
//////////////////////////////////////////////////////////////////////
layout( location = POSITION ) in vec4 inPosition;

//////////////////////////////////////////////////////////////////////
// kolor wierzcho³ka
//////////////////////////////////////////////////////////////////////
layout( location = COLOR ) in vec4 inColor;

//////////////////////////////////////////////////////////////////////
// kolor wierzcho³ka do interpolacji
//////////////////////////////////////////////////////////////////////
out vec4 inoutColor;

//////////////////////////////////////////////////////////////////////
// program g³ówny
//////////////////////////////////////////////////////////////////////
void main()
{
    // standardowe przekszta³cenie wspó³rzêdnych wierzcho³ków
    gl_Position = modelViewProjectionMatrix * inPosition;

    // kolor wierzcho³ka do interpolacji
    inoutColor = inColor;
}
