//////////////////////////////////////////////////////////////////////
// (c) Janusz Ganczarski
// http://www.januszg.hg.pl
// JanuszG@enter.net.pl
//////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////
// GLSL 3.30
//////////////////////////////////////////////////////////////////////
#version 330

//////////////////////////////////////////////////////////////////////
// iloczyn macierzy modelu-widoku i macierzy rzutowania
//////////////////////////////////////////////////////////////////////
uniform mat4 modelViewProjectionMatrix;

//////////////////////////////////////////////////////////////////////
// numery indeksów poszczególnych atrybutów wierzcho³ków
//////////////////////////////////////////////////////////////////////
#define POSITION  0
#define TEX_COORD 1

//////////////////////////////////////////////////////////////////////
// wspó³rzêdne wierzcho³ka
//////////////////////////////////////////////////////////////////////
layout( location = POSITION ) in vec4 inPosition;

//////////////////////////////////////////////////////////////////////
// wspó³rzêdne tekstury
//////////////////////////////////////////////////////////////////////
layout( location = TEX_COORD ) in vec2 inTexCoord;

//////////////////////////////////////////////////////////////////////
// interpolowane wspó³rzêdne tekstury
//////////////////////////////////////////////////////////////////////
out vec2 inoutTexCoord;

//////////////////////////////////////////////////////////////////////
// program g³ówny
//////////////////////////////////////////////////////////////////////
void main()
{
    // standardowe przekszta³cenie wierzcho³ków
    gl_Position = modelViewProjectionMatrix * inPosition;

    // interpolacja wspó³rzêdnych tekstury
    inoutTexCoord = inTexCoord;
}
